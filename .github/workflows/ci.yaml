name: ci

on: [push]

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare@63-publish-for-testing
      - name: lint
        run: "yarn lint"
      - name: check formatting
        run: "yarn formatting-check"
      - name: type check
        run: "yarn type-check"
      - name: test
        run: "yarn test --ci --coverage"
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: |
      github.ref == 'refs/heads/main' ||
      startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare@63-publish-for-testing
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{secrets.EXPO_CLI_USERNAME}}
          expo-password: ${{secrets.EXPO_CLI_PASSWORD}}
      - run: "expo publish"
        shell: bash
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}

  publish_for_testing:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare@63-publish-for-testing
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{secrets.EXPO_CLI_USERNAME}}
          expo-password: ${{secrets.EXPO_CLI_PASSWORD}}
      - run: "expo publish --release-channel ${GITHUB_REF#refs/heads/}"
        shell: bash
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}

  build_and_publish_android:
    runs-on: ubuntu-latest
    needs: publish
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare@63-publish-for-testing
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{secrets.EXPO_CLI_USERNAME}}
          expo-password: ${{secrets.EXPO_CLI_PASSWORD}}
      - run: "expo build:android -t app-bundle"
        shell: bash
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY}}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
      - run: 'echo "$GOOGLE_API_KEY" > key.json'
        shell: bash
        env:
          GOOGLE_API_KEY: ${{secrets.GOOGLE_API_KEY}}
      - run: expo upload:android --latest --key key.json --use-submission-service
      - run: "wget $(expo url:apk) -O curfew-alarm.aab"
        shell: bash
      - name: save build as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: curfew-alarm.aab

  build_ios:
    runs-on: ubuntu-latest
    needs: publish
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare@63-publish-for-testing
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-username: ${{secrets.EXPO_CLI_USERNAME}}
          expo-password: ${{secrets.EXPO_CLI_PASSWORD}}
      - run: "expo build:ios -t archive"
        shell: bash
        env:
          EXPO_APPLE_ID: ${{secrets.EXPO_APPLE_ID}}
          EXPO_APPLE_PASSWORD: ${{secrets.EXPO_APPLE_PASSWORD}}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
      - run: "wget $(expo url:ipa) -O curfew-alarm.ipa"
        shell: bash
      - name: save build as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios
          path: curfew-alarm.ipa

  github_release:
    runs-on: ubuntu-latest
    needs: [build_and_publish_android, build_ios]
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: android
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: ios
          path: ./
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./curfew-alarm.ipa
          asset_name: curfew-alarm.ipa
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./curfew-alarm.aab
          asset_name: curfew-alarm.aab
          asset_content_type: application/zip
